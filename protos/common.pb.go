// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.11.4
// source: common.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Role int32

const (
	Role_unknown             Role = 0  // 未知角色
	Role_mao_bu_ma           Role = 4  // 毛不拔
	Role_fei_yuan_long_chuan Role = 7  // 肥圆龙川
	Role_wang_kui            Role = 12 // 王魁
	Role_han_mei             Role = 14 // 韩梅
	Role_zheng_wen_xian      Role = 15 // 鄭文先
	Role_gui_jiao            Role = 17 // 鬼脚
	Role_shao_xiu            Role = 18 // 邵秀
	Role_jin_sheng_huo       Role = 19 // 金生火
	Role_bai_fei_fei         Role = 21 // 白菲菲
	Role_duan_mu_jing        Role = 22 // 端木静
	Role_lao_han             Role = 24 // 老汉
	Role_bai_xiao_nian       Role = 25 // 白小年
	Role_lao_bie             Role = 26 // 老鳖
)

// Enum value maps for Role.
var (
	Role_name = map[int32]string{
		0:  "unknown",
		4:  "mao_bu_ma",
		7:  "fei_yuan_long_chuan",
		12: "wang_kui",
		14: "han_mei",
		15: "zheng_wen_xian",
		17: "gui_jiao",
		18: "shao_xiu",
		19: "jin_sheng_huo",
		21: "bai_fei_fei",
		22: "duan_mu_jing",
		24: "lao_han",
		25: "bai_xiao_nian",
		26: "lao_bie",
	}
	Role_value = map[string]int32{
		"unknown":             0,
		"mao_bu_ma":           4,
		"fei_yuan_long_chuan": 7,
		"wang_kui":            12,
		"han_mei":             14,
		"zheng_wen_xian":      15,
		"gui_jiao":            17,
		"shao_xiu":            18,
		"jin_sheng_huo":       19,
		"bai_fei_fei":         21,
		"duan_mu_jing":        22,
		"lao_han":             24,
		"bai_xiao_nian":       25,
		"lao_bie":             26,
	}
)

func (x Role) Enum() *Role {
	p := new(Role)
	*p = x
	return p
}

func (x Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Role) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[0].Descriptor()
}

func (Role) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[0]
}

func (x Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Role.Descriptor instead.
func (Role) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

type Phase int32

const (
	Phase_Draw_Phase       Phase = 0 // 摸牌阶段
	Phase_Main_Phase       Phase = 1 // 出牌阶段
	Phase_Send_Start_Phase Phase = 2 // 情报传递阶段开始时
	Phase_Send_Phase       Phase = 3 // 传递阶段
	Phase_Fight_Phase      Phase = 4 // 争夺阶段
	Phase_Receive_Phase    Phase = 5 // 接收阶段
)

// Enum value maps for Phase.
var (
	Phase_name = map[int32]string{
		0: "Draw_Phase",
		1: "Main_Phase",
		2: "Send_Start_Phase",
		3: "Send_Phase",
		4: "Fight_Phase",
		5: "Receive_Phase",
	}
	Phase_value = map[string]int32{
		"Draw_Phase":       0,
		"Main_Phase":       1,
		"Send_Start_Phase": 2,
		"Send_Phase":       3,
		"Fight_Phase":      4,
		"Receive_Phase":    5,
	}
)

func (x Phase) Enum() *Phase {
	p := new(Phase)
	*p = x
	return p
}

func (x Phase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Phase) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[1].Descriptor()
}

func (Phase) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[1]
}

func (x Phase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Phase.Descriptor instead.
func (Phase) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

type CardType int32

const (
	CardType_Cheng_Qing CardType = 0 // 澄清
	CardType_Shi_Tan    CardType = 1 // 试探
	CardType_Wei_Bi     CardType = 2 // 威逼
	CardType_Li_You     CardType = 3 // 利诱
	CardType_Ping_Heng  CardType = 4 // 平衡
	CardType_Po_Yi      CardType = 5 // 破译
	CardType_Jie_Huo    CardType = 6 // 截获
	CardType_Diao_Bao   CardType = 7 // 调包
	CardType_Wu_Dao     CardType = 8 // 误导
)

// Enum value maps for CardType.
var (
	CardType_name = map[int32]string{
		0: "Cheng_Qing",
		1: "Shi_Tan",
		2: "Wei_Bi",
		3: "Li_You",
		4: "Ping_Heng",
		5: "Po_Yi",
		6: "Jie_Huo",
		7: "Diao_Bao",
		8: "Wu_Dao",
	}
	CardType_value = map[string]int32{
		"Cheng_Qing": 0,
		"Shi_Tan":    1,
		"Wei_Bi":     2,
		"Li_You":     3,
		"Ping_Heng":  4,
		"Po_Yi":      5,
		"Jie_Huo":    6,
		"Diao_Bao":   7,
		"Wu_Dao":     8,
	}
)

func (x CardType) Enum() *CardType {
	p := new(CardType)
	*p = x
	return p
}

func (x CardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[2].Descriptor()
}

func (CardType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[2]
}

func (x CardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardType.Descriptor instead.
func (CardType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

type Color int32

const (
	Color_Black Color = 0 // 对于身份，则是绿色（神秘人）；对于卡牌，则是黑色
	Color_Red   Color = 1 // 红色
	Color_Blue  Color = 2 // 蓝色
)

// Enum value maps for Color.
var (
	Color_name = map[int32]string{
		0: "Black",
		1: "Red",
		2: "Blue",
	}
	Color_value = map[string]int32{
		"Black": 0,
		"Red":   1,
		"Blue":  2,
	}
)

func (x Color) Enum() *Color {
	p := new(Color)
	*p = x
	return p
}

func (x Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Color) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[3].Descriptor()
}

func (Color) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[3]
}

func (x Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Color.Descriptor instead.
func (Color) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

// 神秘人任务
type SecretTask int32

const (
	SecretTask_Killer    SecretTask = 0 // 你的回合中，一名红色和蓝色情报合计不少于2张的人死亡
	SecretTask_Stealer   SecretTask = 1 // 你的回合中，有人宣胜，则你代替他胜利
	SecretTask_Collector SecretTask = 2 // 你获得3张红色情报或者3张蓝色情报
)

// Enum value maps for SecretTask.
var (
	SecretTask_name = map[int32]string{
		0: "Killer",
		1: "Stealer",
		2: "Collector",
	}
	SecretTask_value = map[string]int32{
		"Killer":    0,
		"Stealer":   1,
		"Collector": 2,
	}
)

func (x SecretTask) Enum() *SecretTask {
	p := new(SecretTask)
	*p = x
	return p
}

func (x SecretTask) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecretTask) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[4].Descriptor()
}

func (SecretTask) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[4]
}

func (x SecretTask) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecretTask.Descriptor instead.
func (SecretTask) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

type Direction int32

const (
	Direction_Up    Direction = 0 // 向上
	Direction_Left  Direction = 1 // 向左
	Direction_Right Direction = 2 // 向右
)

// Enum value maps for Direction.
var (
	Direction_name = map[int32]string{
		0: "Up",
		1: "Left",
		2: "Right",
	}
	Direction_value = map[string]int32{
		"Up":    0,
		"Left":  1,
		"Right": 2,
	}
)

func (x Direction) Enum() *Direction {
	p := new(Direction)
	*p = x
	return p
}

func (x Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[5].Descriptor()
}

func (Direction) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[5]
}

func (x Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Direction.Descriptor instead.
func (Direction) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

// 卡牌的结构体
type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardId      uint32    `protobuf:"varint,1,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`                                    // 卡牌ID
	CardColor   []Color   `protobuf:"varint,2,rep,packed,name=card_color,json=cardColor,proto3,enum=Color" json:"card_color,omitempty"`         // 卡牌颜色（因为可能有双色卡，所以用了repeated）
	CardDir     Direction `protobuf:"varint,3,opt,name=card_dir,json=cardDir,proto3,enum=Direction" json:"card_dir,omitempty"`                  // 卡牌上的箭头方向
	CardType    CardType  `protobuf:"varint,4,opt,name=card_type,json=cardType,proto3,enum=CardType" json:"card_type,omitempty"`                // 卡牌类型
	WhoDrawCard []Color   `protobuf:"varint,5,rep,packed,name=who_draw_card,json=whoDrawCard,proto3,enum=Color" json:"who_draw_card,omitempty"` // （试探卡）哪个身份的人摸1张牌（那么另外的身份一定是弃1张牌）
	CanLock     bool      `protobuf:"varint,6,opt,name=can_lock,json=canLock,proto3" json:"can_lock,omitempty"`                                 // 是否有锁定标记
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

func (x *Card) GetCardId() uint32 {
	if x != nil {
		return x.CardId
	}
	return 0
}

func (x *Card) GetCardColor() []Color {
	if x != nil {
		return x.CardColor
	}
	return nil
}

func (x *Card) GetCardDir() Direction {
	if x != nil {
		return x.CardDir
	}
	return Direction_Up
}

func (x *Card) GetCardType() CardType {
	if x != nil {
		return x.CardType
	}
	return CardType_Cheng_Qing
}

func (x *Card) GetWhoDrawCard() []Color {
	if x != nil {
		return x.WhoDrawCard
	}
	return nil
}

func (x *Card) GetCanLock() bool {
	if x != nil {
		return x.CanLock
	}
	return false
}

var File_common_proto protoreflect.FileDescriptor

var file_common_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdd,
	0x01, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x09, 0x63, 0x61,
	0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x64, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x63, 0x61, 0x72, 0x64, 0x44, 0x69, 0x72, 0x12, 0x27,
	0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0a, 0x2e, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x0d, 0x77, 0x68, 0x6f, 0x5f, 0x64,
	0x72, 0x61, 0x77, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x06,
	0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0b, 0x77, 0x68, 0x6f, 0x44, 0x72, 0x61, 0x77, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x2a, 0xe9,
	0x01, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x6d, 0x61, 0x6f, 0x5f, 0x62, 0x75, 0x5f, 0x6d,
	0x61, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x66, 0x65, 0x69, 0x5f, 0x79, 0x75, 0x61, 0x6e, 0x5f,
	0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x63, 0x68, 0x75, 0x61, 0x6e, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08,
	0x77, 0x61, 0x6e, 0x67, 0x5f, 0x6b, 0x75, 0x69, 0x10, 0x0c, 0x12, 0x0b, 0x0a, 0x07, 0x68, 0x61,
	0x6e, 0x5f, 0x6d, 0x65, 0x69, 0x10, 0x0e, 0x12, 0x12, 0x0a, 0x0e, 0x7a, 0x68, 0x65, 0x6e, 0x67,
	0x5f, 0x77, 0x65, 0x6e, 0x5f, 0x78, 0x69, 0x61, 0x6e, 0x10, 0x0f, 0x12, 0x0c, 0x0a, 0x08, 0x67,
	0x75, 0x69, 0x5f, 0x6a, 0x69, 0x61, 0x6f, 0x10, 0x11, 0x12, 0x0c, 0x0a, 0x08, 0x73, 0x68, 0x61,
	0x6f, 0x5f, 0x78, 0x69, 0x75, 0x10, 0x12, 0x12, 0x11, 0x0a, 0x0d, 0x6a, 0x69, 0x6e, 0x5f, 0x73,
	0x68, 0x65, 0x6e, 0x67, 0x5f, 0x68, 0x75, 0x6f, 0x10, 0x13, 0x12, 0x0f, 0x0a, 0x0b, 0x62, 0x61,
	0x69, 0x5f, 0x66, 0x65, 0x69, 0x5f, 0x66, 0x65, 0x69, 0x10, 0x15, 0x12, 0x10, 0x0a, 0x0c, 0x64,
	0x75, 0x61, 0x6e, 0x5f, 0x6d, 0x75, 0x5f, 0x6a, 0x69, 0x6e, 0x67, 0x10, 0x16, 0x12, 0x0b, 0x0a,
	0x07, 0x6c, 0x61, 0x6f, 0x5f, 0x68, 0x61, 0x6e, 0x10, 0x18, 0x12, 0x11, 0x0a, 0x0d, 0x62, 0x61,
	0x69, 0x5f, 0x78, 0x69, 0x61, 0x6f, 0x5f, 0x6e, 0x69, 0x61, 0x6e, 0x10, 0x19, 0x12, 0x0b, 0x0a,
	0x07, 0x6c, 0x61, 0x6f, 0x5f, 0x62, 0x69, 0x65, 0x10, 0x1a, 0x2a, 0x71, 0x0a, 0x05, 0x70, 0x68,
	0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x72, 0x61, 0x77, 0x5f, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x61, 0x69, 0x6e, 0x5f, 0x50, 0x68, 0x61, 0x73,
	0x65, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x5f, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x50, 0x68, 0x61, 0x73, 0x65, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x65, 0x6e,
	0x64, 0x5f, 0x50, 0x68, 0x61, 0x73, 0x65, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x50, 0x68, 0x61, 0x73, 0x65, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x50, 0x68, 0x61, 0x73, 0x65, 0x10, 0x05, 0x2a, 0x81, 0x01,
	0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x43,
	0x68, 0x65, 0x6e, 0x67, 0x5f, 0x51, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x68, 0x69, 0x5f, 0x54, 0x61, 0x6e, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x65, 0x69, 0x5f,
	0x42, 0x69, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x69, 0x5f, 0x59, 0x6f, 0x75, 0x10, 0x03,
	0x12, 0x0d, 0x0a, 0x09, 0x50, 0x69, 0x6e, 0x67, 0x5f, 0x48, 0x65, 0x6e, 0x67, 0x10, 0x04, 0x12,
	0x09, 0x0a, 0x05, 0x50, 0x6f, 0x5f, 0x59, 0x69, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x4a, 0x69,
	0x65, 0x5f, 0x48, 0x75, 0x6f, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x69, 0x61, 0x6f, 0x5f,
	0x42, 0x61, 0x6f, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x75, 0x5f, 0x44, 0x61, 0x6f, 0x10,
	0x08, 0x2a, 0x25, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x65, 0x64, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x42, 0x6c, 0x75, 0x65, 0x10, 0x02, 0x2a, 0x35, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x0a, 0x0a, 0x06, 0x4b, 0x69, 0x6c, 0x6c, 0x65,
	0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x74, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x10, 0x02, 0x2a,
	0x28, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x06, 0x0a, 0x02,
	0x55, 0x70, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x65, 0x66, 0x74, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x52, 0x69, 0x67, 0x68, 0x74, 0x10, 0x02, 0x42, 0x10, 0x5a, 0x0e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData = file_common_proto_rawDesc
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_proto_rawDescData)
	})
	return file_common_proto_rawDescData
}

var file_common_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_common_proto_goTypes = []interface{}{
	(Role)(0),       // 0: role
	(Phase)(0),      // 1: phase
	(CardType)(0),   // 2: card_type
	(Color)(0),      // 3: color
	(SecretTask)(0), // 4: secret_task
	(Direction)(0),  // 5: direction
	(*Card)(nil),    // 6: card
}
var file_common_proto_depIdxs = []int32{
	3, // 0: card.card_color:type_name -> color
	5, // 1: card.card_dir:type_name -> direction
	2, // 2: card.card_type:type_name -> card_type
	3, // 3: card.who_draw_card:type_name -> color
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		EnumInfos:         file_common_proto_enumTypes,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_rawDesc = nil
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
